name: Continuous Integration
on:
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: PHP ${{ matrix.php }} WP ${{ matrix.wp }}
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      WP_TESTS_DIR: /tmp/wordpress-tests-lib
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.2', '7.3', '7.4' ]
        wp: [ 'latest' ]
    services:
      database:
        image: mysql:5.6
        env:
          MYSQL_ROOT_PASSWORD: wordpress
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer
          extensions: mysql
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install WordPress and initialize database
        run: chmod +x ./tests/bin/install-wp-tests.sh && ./tests/bin/install-wp-tests.sh cf7a_tests root wordpress 127.0.0.1 latest

      - name: Run PHP Unit tests
        run: composer run test

  lint:
    name: Check Coding Standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: WPCS check
        uses: 10up/wpcs-action@stable
        with:
          standard: 'WordPress-VIP-Go'
          extra_args: '--report-json=./phpcs.json'
      - name: Update summary
        run: |
          npx --yes github:10up/phpcs-json-to-md --path ./phpcs.json --output ./phpcs.md
          cat phpcs.md >> $GITHUB_STEP_SUMMARY

  build:
    name: Build plugin
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm run build --if-present
